package com.yjdz.zncdz.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AccountinfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public AccountinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountIsNull() {
            addCriterion("gifttotalamount is null");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountIsNotNull() {
            addCriterion("gifttotalamount is not null");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountEqualTo(BigDecimal value) {
            addCriterion("gifttotalamount =", value, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountNotEqualTo(BigDecimal value) {
            addCriterion("gifttotalamount <>", value, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountGreaterThan(BigDecimal value) {
            addCriterion("gifttotalamount >", value, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("gifttotalamount >=", value, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountLessThan(BigDecimal value) {
            addCriterion("gifttotalamount <", value, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("gifttotalamount <=", value, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountIn(List<BigDecimal> values) {
            addCriterion("gifttotalamount in", values, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountNotIn(List<BigDecimal> values) {
            addCriterion("gifttotalamount not in", values, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gifttotalamount between", value1, value2, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andGifttotalamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gifttotalamount not between", value1, value2, "gifttotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountIsNull() {
            addCriterion("rechargetotalamount is null");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountIsNotNull() {
            addCriterion("rechargetotalamount is not null");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountEqualTo(BigDecimal value) {
            addCriterion("rechargetotalamount =", value, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountNotEqualTo(BigDecimal value) {
            addCriterion("rechargetotalamount <>", value, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountGreaterThan(BigDecimal value) {
            addCriterion("rechargetotalamount >", value, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("rechargetotalamount >=", value, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountLessThan(BigDecimal value) {
            addCriterion("rechargetotalamount <", value, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("rechargetotalamount <=", value, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountIn(List<BigDecimal> values) {
            addCriterion("rechargetotalamount in", values, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountNotIn(List<BigDecimal> values) {
            addCriterion("rechargetotalamount not in", values, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("rechargetotalamount between", value1, value2, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andRechargetotalamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("rechargetotalamount not between", value1, value2, "rechargetotalamount");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(BigDecimal value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(BigDecimal value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(BigDecimal value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(BigDecimal value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<BigDecimal> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<BigDecimal> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountIsNull() {
            addCriterion("withdrawamount is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountIsNotNull() {
            addCriterion("withdrawamount is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountEqualTo(BigDecimal value) {
            addCriterion("withdrawamount =", value, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountNotEqualTo(BigDecimal value) {
            addCriterion("withdrawamount <>", value, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountGreaterThan(BigDecimal value) {
            addCriterion("withdrawamount >", value, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("withdrawamount >=", value, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountLessThan(BigDecimal value) {
            addCriterion("withdrawamount <", value, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("withdrawamount <=", value, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountIn(List<BigDecimal> values) {
            addCriterion("withdrawamount in", values, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountNotIn(List<BigDecimal> values) {
            addCriterion("withdrawamount not in", values, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("withdrawamount between", value1, value2, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andWithdrawamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("withdrawamount not between", value1, value2, "withdrawamount");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyIsNull() {
            addCriterion("ismonthly is null");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyIsNotNull() {
            addCriterion("ismonthly is not null");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyEqualTo(Boolean value) {
            addCriterion("ismonthly =", value, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyNotEqualTo(Boolean value) {
            addCriterion("ismonthly <>", value, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyGreaterThan(Boolean value) {
            addCriterion("ismonthly >", value, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("ismonthly >=", value, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyLessThan(Boolean value) {
            addCriterion("ismonthly <", value, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyLessThanOrEqualTo(Boolean value) {
            addCriterion("ismonthly <=", value, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyIn(List<Boolean> values) {
            addCriterion("ismonthly in", values, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyNotIn(List<Boolean> values) {
            addCriterion("ismonthly not in", values, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyBetween(Boolean value1, Boolean value2) {
            addCriterion("ismonthly between", value1, value2, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andIsmonthlyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("ismonthly not between", value1, value2, "ismonthly");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("endtime is null");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("endtime is not null");
            return (Criteria) this;
        }

        public Criteria andEndtimeEqualTo(Date value) {
            addCriterionForJDBCDate("endtime =", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("endtime <>", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("endtime >", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("endtime >=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThan(Date value) {
            addCriterionForJDBCDate("endtime <", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("endtime <=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIn(List<Date> values) {
            addCriterionForJDBCDate("endtime in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("endtime not in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("endtime between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("endtime not between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Boolean value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Boolean value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Boolean value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Boolean value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Boolean> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Boolean> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accountinfo
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accountinfo
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}